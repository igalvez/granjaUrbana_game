#include "StateMenu.h"

#define BOTOESX 234


#define JOGARY 184
#define JOGARX 530
#define JOGARW 244
#define JOGARH 96
#define AJUDAY 294
#define AJUDAX 508
#define AJUDAW 269
#define AJUDAH 106
#define STORYY 415
#define STORYX 448
#define STORYW 327
#define STORYH 85
#define SAIRY 504
#define SAIRX 547
#define SAIRW 162
#define SAIRH 66

#define BOTAOW 370
#define BOTAOH 90

void StateMenu :: load(int stack)
{
  bg = new Sprite("pictures/menu.png");
  jogar_on = new Sprite("pictures/jogar_on.png");
	jogar_off = new Sprite("pictures/jogar_off.png");
	ajuda_on = new Sprite("pictures/ajuda_on.png");
	ajuda_off = new Sprite("pictures/ajuda_off.png");
	story_on = new Sprite("pictures/story_on.png");
	story_off = new Sprite("pictures/story_off.png");
  sair_on = new Sprite("pictures/sair_on.png");
	sair_off = new Sprite("pictures/sair_off.png");
  
  jogar = 0;
	ajuda = 0;
	story = 0;
 	sair = 0;

 /* menu = new Text("/usr/share/fonts/truetype/ttf-liberation/LiberationSans-Regular.ttf","MENU",380,100,40);
	instrucoes = new Text("/usr/share/fonts/truetype/ttf-liberation/LiberationSans-Regular.ttf", "1 - instrucoes de jogo",300,180,25);
  voltar = new Text("/usr/share/fonts/truetype/ttf-liberation/LiberationSans-Regular.ttf", "2 - jogo",300,220,25);
	sair = new Text("/usr/share/fonts/truetype/ttf-liberation/LiberationSans-Regular.ttf" , "3 - sair",300,260, 25);*/
  music = new Audio("sound/Pombo_Menu.mp3",1);
  music->play(-1);
	returnState = 0;
}

int StateMenu :: unload()
{
	delete bg;
  delete jogar_on;
	delete jogar_off;
	delete ajuda_on;
	delete ajuda_off;
	delete story_on;
	delete story_off;
  delete sair_on;
	delete sair_off; 
  music->stop();
	return 0;
}

int StateMenu :: update(int dt)
{
	InputManager::getInstance()->update();


  if(InputManager::getInstance()->isMouseUp(SDL_BUTTON_RIGHT)){
		int mouseX, mouseY;
		SDL_GetMouseState( &mouseX, &mouseY );

  	jogar = 0;
		ajuda = 0;
		story = 0;
		sair = 0;
		
		if((mouseX >= BOTOESX) && (mouseX <= (BOTOESX + BOTAOW))){
			if((mouseY >= JOGARY) && (mouseY <= (JOGARY + BOTAOH)))
				jogar = 1;
			else if((mouseY >= AJUDAY) && (mouseY <= (AJUDAY + BOTAOH)))
				ajuda = 1;
			else if((mouseY >= STORYY) && (mouseY <= (STORYY + BOTAOH)))
				story = 1;
      else if((mouseY >= SAIRY) && (mouseY <= (SAIRY + BOTAOH)))
				sair = 1;	
		}
  }
		
  if(InputManager::getInstance()->isMouseDown(SDL_BUTTON_LEFT)){
		int mouseX, mouseY;
		SDL_GetMouseState( &mouseX, &mouseY );

		
		if((mouseX >= BOTOESX) && (mouseX <= (BOTOESX + BOTAOW))){
			if((mouseY >= JOGARY) && (mouseY <= (JOGARY + BOTAOH)))
				returnState = 2;
			else if((mouseY >= AJUDAY) && (mouseY <= (AJUDAY + BOTAOH)))
				returnState = 6;
			else if((mouseY >= STORYY) && (mouseY <= (STORYY + BOTAOH)))
				returnState = 4;
      else if((mouseY >= SAIRY) && (mouseY <= (SAIRY + BOTAOH)))
				returnState = 3;	
		}
  }
  return returnState;
}



void StateMenu :: render()
{
	bg->render(0,0);
  
  if(jogar)
		jogar_on->render(BOTOESX, JOGARY);
  else
		jogar_off->render(BOTOESX, JOGARY);

  if(ajuda)
		ajuda_on->render(BOTOESX, AJUDAY);
  else
		ajuda_off->render(BOTOESX, AJUDAY);

  if(story)
		story_on->render(BOTOESX, STORYY);
  else
		story_off->render(BOTOESX, STORYY);

  if(sair)
		sair_on->render(BOTOESX, SAIRY);
  else
		sair_off->render(BOTOESX, SAIRY);
  
}

